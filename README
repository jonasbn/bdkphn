NAME
    Business::DK::Phonenumber - module to validate and format Danish
    telephonenumbers

VERSION
    This documentation describes version 0.01

SYNOPSIS
        #Procedural interface
        use Business::DK::Phonenumber qw(validate render);
        
    #Validation
        if (Business::DK::Phonenumber->validate($phonenumber)) { ... }
        
    #Default format
        print Business::DK::Phonenumber->render($phonenum);
        # +45 12 34 56 78
        
    #Brief human readable Danish phonenumber format with international prefix
        print Business::DK::Phonenumber->render($phonenum, '+%d2 %d8');
        # +45 12345678
        
    #Brief human readable Danish phonenumber format
        print Business::DK::Phonenumber->render($phonenum, '%d8');
        # 12345678
        
    #Normal human readable Danish phonenumber format
        print Business::DK::Phonenumber->render($phonenum, '%d2 %d2 %d2 %d2');
        # 12 34 56 78
        
    #Long human readable Danish phonenumber format with international prefix
        print Business::DK::Phonenumber->render($phonenum, '+%d2 %d2 %d2 %d2 %d2');
        # +45 12 34 56 78, default format
        
    #OOP interface
        use Business::DK::Phonenumber;
        
    #Constructor
        my $phonenumber = Business::DK::Phonenumber->new('+45 12345678');
        
    #Brief human readable Danish phonenumber format with international prefix
        print Business::DK::Phonenumber->render('+%d2 %d8');
        
    #a brief form validating a stripping everything
        my $phonenum =
            Business::DK::Phonenumber->new('+45 12 34 56 78')->render('%d8');
        # 12345678
        
    #for MSISDN like representation with protocol prefix
        my $phonenum =
            Business::DK::Phonenumber->new('+45 12 34 56 78')->render('GSM%d10');
        # GSM4512345678
        
    #for dialing Denmark with international country prefix and international
        #calling code for calling outside Denmark 00
        my $phonenum =
            Business::DK::Phonenumber->new('12 34 56 78')->render('00%d10');
        # 004512345678

DESCRIPTION
    This module offers functionality to validate, format and generate Danish
    phonenumbers.

    The validation can recognise telephone numbers is the following formats
    as Danish phonenumbers.

    *   12345678

    *   4512345678

    *   +4512345678

    White space characters are ignored. See also "phonenumber".

    In addition to validation the module offers generation of valid danish
    phonenumbers. The purpose of using generated phonenumber is up to the
    user, but the original intent is generation of varied sets of test data.

    The module can be utilized in both procedural and object-oriented
    manner.

SUBROUTINES AND METHODS
    The following subroutines are to be used in a procedural manner.

  validate($phonenumber)
  render($phonenumber, $template)
  generate($template)
    The following methods are to be used in a OOP manner.

  new({ phonenumber => $phonenumber, template => $template })
    For validphonenumber formatting please refer to "phonenumber"

  phonenumber($phonenumber)
    This is accessor to the phonenumber attribute for a
    Business::DK::Phonenumber object. Provided with a valid phonenumber
    parameter the object's phonenumber attribute is set.

    If the accessor is not provided with a phonenumber parameter, the one
    defined is in the object is returned.

    See also: "_phonenumber", which is used internally to validate the
    phonenumber parameter.

    Valid phonenumbers have to abide to the following formatting:

    *   +<international prefix><8 digit phonenumber>

    *   <international prefix><8 digit phonenumber>

    *   <8 digit phonenumber>

    The prefixed plus sign and space used as separator are optional as are
    the international dialing code.

    The phonenumber can be formatted in anyway separated using whitespace
    characters.

  template($template)
    This is accessor to the template attribute for a
    Business::DK::Phonenumber object. Provided with a valid template
    parameter the object's template attribute is set.

    If the accessor is not provided with a template parameter, the one
    defined is in the object is returned.

    See also: "_template", which is used internally to validate the template
    parameter.

PRIVATE METHODS
  _phonenumber()
  _template()
DIAGNOSTICS
    *

CONFIGURATION AND ENVIRONMENT
    Business::DK::Phonenumber attempts to meet requirements of both a
    procuderal and object oriented interface.

DEPENDENCIES
    *   Carp

    *   Exporter

INCOMPATIBILITIES
BUGS AND LIMITATIONS
TEST AND QUALITY
TODO
    *   Please refer to the distribution TODO file

SEE ALSO
    sprintf
        Business::DK::Phonenumber utilizes sprintf to as templating system
        for formatting telephonenumbers. This is a well specified and tested
        interface which is easy to use.

BUG REPORTING
    Please report issues via CPAN RT:

    http://rt.cpan.org/NoAuth/Bugs.html?Dist=Business-DK-Phonenumber

    or by sending mail to

    bug-Business-DK-Phonenumber@rt.cpan.org

AUTHOR
    Jonas B. Nielsen, (jonasbn) - "<jonasbn@cpan.org>"

COPYRIGHT
    Business-DK-Phonenumber is (C) by Jonas B. Nielsen, (jonasbn) 2008

LICENSE
    Business-DK-Phonenumber is released under the artistic license

    The distribution is licensed under the Artistic License, as specified by
    the Artistic file in the standard perl distribution
    (http://www.perl.com/language/misc/Artistic.html).

